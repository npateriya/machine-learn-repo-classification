# [DEPRECATED]

This starter kit is deprecated. If you want to connect your bot to CiscoSpark, please go on [Recast.AI website](https://recast.ai), go on your bot, and connect it to CiscoSpark through `Run` tab > `Bot Connector`.

We recommend you to use our new Starter-kit to code your bot. You can choose one of those:

* [StarterKit NodeJS](https://github.com/RecastAI/starter-NodeJS)
* [StarterKit Python](https://github.com/RecastAI/starter-python)
* [StarterKit Ruby](https://github.com/RecastAI/starter-ruby)
* [StarterKit PHP](https://github.com/RecastAI/starter-PHP)

# Start coding your bot: Recast.AI + CiscoSpark

* This is a small Tutorial to show you how to integrate CiscoSpark to a Recast.AI bot
* If you have no idea of how to use Recast.AI I advise you to check this SDK first:  [Recast.AI-nodejs-SDK](https://github.com/RecastAI/SDK-NodeJs)

## Requirements
* Create an account on [Recast.AI](https://recast.ai/signup)
* Create an account on [CiscoSpark](https://web.ciscospark.com)

## Set up your Recast.AI account

##### Create your bot

* Log in to your Recast.AI account
* Create a new bot

##### Get your token

* In your profile, click your bot
* In the tab-menu, click on the the little screw
* Here is the `request access token` you will need to configure your bot!

## Set up your CiscoSpark account

##### Set the CiscoSpark-bot account

* Log in on  [CiscoSpark Developer](https://developer.ciscospark.com/)
* Go to "My Apps"
* Just follow the steps for create your bot
* and copy the access_token of your bot

## Start your bot in local

#### Ngrok

* Download on your computer the appropriate version of [Ngrok](https://ngrok.com/download)
* Open a new tab in your terminal:
```
./ngrok http 7001
```
* Copy past the ``` https://*******ngrok.io``` you get, you will need it for the next step
* Leave your Ngrok serveur running

##### Complete the config.js

* Copy your Recast.AI `Recast.AI access token`
* Copy your token `Token CiscoSpark of your bot`
* Copy your webHookUrl  `ngrok https url`

```vim config.json```
```javascript
{
  "webhookUrl": "NGROK_URL",
  "token": "YOUR_ACCESS_TOKEN_OF_BOT",
  "port": 7001,
  "recast": "TOKEN_RECAST",
  "language": "en"
}

```
## Launching your Bot
* make sure to have ngrok launched and the correct URL in you config file.
```
npm start
```
### Your bot
* All you need for you bot is in the index.js file. The call to Recast.AI is already done.
* ```client.textConverse(message.body, { conversationToken: message.chatid })``` To use this method you need to pass the user's input, and  a unique conversation token. This token can be the message.chatid of the messenger chat. This token will create for each users a specific conversation with your bot.
* ```res.reply()``` To get the first reply of your bot.
* ```res.replies``` To get an array of all your replies.
* ``` res.action``` Get the object action. When an action is complete you will have the ```action.done = true ``` and you will be able to trigger a specific behavior.

```javascript

// We will listen all sentences for send it to Recast.ai
flint.hears(/.*/, (bot, trigger) => {
  recastClient.textConverse(trigger.text, { conversationToken: trigger.roomId })
  .then((res) => {
    const reply = res.reply()
    const replies = res.replies
    const action = res.action

    if (!replies.length) {
      bot.say('I didn\'t understand... Sorry %s :(', trigger.personDisplayName)
    }

    if (!reply || !replies) {
      bot.say('i don\'t get it :(')
    } else {
      if (action && action.done) {
        console.log('action is done')
        // Do something if you need: use res.memory('notion') if you got a notion from this action
      }
      replies.forEach(reply => bot.say(reply))
    }
  })
  .catch((err) => {
    bot.say('%s, I\'m getting tired, let\'s talk later', trigger.personDisplayName);
  })
})

```

## Author

Bruno Gantelmi, bruno.gantelmi@recast.ai

You can follow us on Twitter at [@recastai](https://twitter.com/recastai) for updates and releases.

## License

Copyright (c) [2016] [Recast.AI](https://recast.ai)

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
